{"version":3,"file":"extension.js","sources":["../../src/components/ApplicationSetList/ApplicationSetList.tsx","../../src/components/StatusIndicator/StatusIndicator.tsx","../../src/hooks/useApplicationSetData.ts","../../src/components/ApplicationSetDetail/ApplicationSetDetail.tsx","../../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Application } from '../../types/application';\n\ninterface ApplicationSetListProps {\n  applications: Application[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst ApplicationSetList: React.FC<ApplicationSetListProps> = ({ \n  applications, \n  isLoading, \n  error \n}) => {\n  const [filter, setFilter] = React.useState<string | null>(null);\n  \n  const filteredApplications = React.useMemo(() => {\n    if (!filter) return applications;\n    \n    if (filter === 'healthy') {\n      return applications.filter(app => app.status?.health?.status === 'Healthy');\n    } else if (filter === 'progressing') {\n      return applications.filter(app => app.status?.health?.status === 'Progressing');\n    } else if (filter === 'degraded') {\n      return applications.filter(app => app.status?.health?.status === 'Degraded');\n    } else if (filter === 'outOfSync') {\n      return applications.filter(app => app.status?.sync?.status === 'OutOfSync');\n    }\n    \n    return applications;\n  }, [applications, filter]);\n  \n  if (isLoading) {\n    return (\n      <div className=\"application-set-extension__loading\">\n        Chargement des applications...\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"application-set-extension__error\">\n        Erreur lors du chargement des applications: {error}\n      </div>\n    );\n  }\n  \n  if (applications.length === 0) {\n    return (\n      <div className=\"application-set-extension__empty\">\n        Aucune application trouvée pour cet ApplicationSet.\n      </div>\n    );\n  }\n  \n  return (\n    <div>\n      <div className=\"application-set-extension__filters\">\n        <button \n          className={`application-set-extension__filter ${!filter ? 'application-set-extension__filter--active' : ''}`}\n          onClick={() => setFilter(null)}\n        >\n          Tous\n        </button>\n        <button \n          className={`application-set-extension__filter ${filter === 'healthy' ? 'application-set-extension__filter--active' : ''}`}\n          onClick={() => setFilter('healthy')}\n        >\n          Healthy\n        </button>\n        <button \n          className={`application-set-extension__filter ${filter === 'progressing' ? 'application-set-extension__filter--active' : ''}`}\n          onClick={() => setFilter('progressing')}\n        >\n          Progressing\n        </button>\n        <button \n          className={`application-set-extension__filter ${filter === 'degraded' ? 'application-set-extension__filter--active' : ''}`}\n          onClick={() => setFilter('degraded')}\n        >\n          Degraded\n        </button>\n        <button \n          className={`application-set-extension__filter ${filter === 'outOfSync' ? 'application-set-extension__filter--active' : ''}`}\n          onClick={() => setFilter('outOfSync')}\n        >\n          Out of Sync\n        </button>\n      </div>\n      \n      <table className=\"application-set-extension__table\">\n        <thead>\n          <tr>\n            <th>Nom</th>\n            <th>Namespace</th>\n            <th>Cluster</th>\n            <th>Sync Status</th>\n            <th>Health Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredApplications.map(app => (\n            <tr key={app.metadata.name}>\n              <td>\n                <a href={`/applications/${app.metadata.name}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {app.metadata.name}\n                </a>\n              </td>\n              <td>{app.spec.destination.namespace}</td>\n              <td>{app.spec.destination.name || app.spec.destination.server}</td>\n              <td>\n                <div className={`application-set-extension__sync application-set-extension__sync--${app.status?.sync?.status === 'Synced' ? 'synced' : app.status?.sync?.status === 'OutOfSync' ? 'out-of-sync' : 'unknown'}`}>\n                  {app.status?.sync?.status || 'Unknown'}\n                </div>\n              </td>\n              <td>\n                <div className={`application-set-extension__health application-set-extension__health--${(app.status?.health?.status || 'unknown').toLowerCase()}`}>\n                  {app.status?.health?.status || 'Unknown'}\n                </div>\n              </td>\n              <td>\n                <div className=\"application-set-extension__actions\">\n                  <button className=\"application-set-extension__action-button\" onClick={() => window.open(`/applications/${app.metadata.name}?view=tree`, '_blank')}>\n                    Voir\n                  </button>\n                  <button className=\"application-set-extension__action-button application-set-extension__action-button--primary\" onClick={() => window.open(`/applications/${app.metadata.name}?operation=sync`, '_blank')}>\n                    Sync\n                  </button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ApplicationSetList;","import * as React from 'react';\n\ninterface StatusIndicatorProps {\n  total: number;\n  healthy: number;\n  degraded: number;\n  progressing: number;\n  unknown: number;\n}\n\nconst StatusIndicator: React.FC<StatusIndicatorProps> = ({\n  total,\n  healthy,\n  degraded,\n  progressing,\n  unknown\n}) => {\n  if (total === 0) return null;\n  \n  const healthyPercentage = (healthy / total) * 100;\n  const degradedPercentage = (degraded / total) * 100;\n  const progressingPercentage = (progressing / total) * 100;\n  const unknownPercentage = (unknown / total) * 100;\n  \n  return (\n    <div style={{ \n      display: 'flex', \n      height: '8px', \n      width: '100%', \n      borderRadius: '4px', \n      overflow: 'hidden',\n      marginBottom: '1.5rem'\n    }}>\n      {healthy > 0 && (\n        <div style={{ \n          width: `${healthyPercentage}%`, \n          backgroundColor: '#18BE94' \n        }} />\n      )}\n      {progressing > 0 && (\n        <div style={{ \n          width: `${progressingPercentage}%`, \n          backgroundColor: '#3B73D0' \n        }} />\n      )}\n      {degraded > 0 && (\n        <div style={{ \n          width: `${degradedPercentage}%`, \n          backgroundColor: '#E96D76' \n        }} />\n      )}\n      {unknown > 0 && (\n        <div style={{ \n          width: `${unknownPercentage}%`, \n          backgroundColor: '#8D9BAE' \n        }} />\n      )}\n    </div>\n  );\n};\n\nexport default StatusIndicator;","import * as React from 'react';\nimport { Application } from '../types/application';\n\ninterface ApplicationStats {\n  total: number;\n  Healthy: number;\n  Progressing: number;\n  Degraded: number;\n  Suspended: number;\n  Missing: number;\n  Unknown: number;\n  Synced: number;\n  OutOfSync: number;\n}\n\nexport const useApplicationSetData = (applicationSetName: string) => {\n  const [applications, setApplications] = React.useState<Application[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const [error, setError] = React.useState<string | null>(null);\n  \n  const stats = React.useMemo<ApplicationStats>(() => {\n    return applications.reduce((acc, app) => {\n      // Traiter les statuts de santé\n      const healthStatus = app.status?.health?.status || 'Unknown';\n      acc[healthStatus as keyof ApplicationStats] = \n        ((acc[healthStatus as keyof ApplicationStats] as number) || 0) + 1;\n      \n      // Traiter les statuts de synchronisation\n      const syncStatus = app.status?.sync?.status || 'Unknown';\n      if (syncStatus === 'Synced') {\n        acc.Synced = (acc.Synced || 0) + 1;\n      } else if (syncStatus === 'OutOfSync') {\n        acc.OutOfSync = (acc.OutOfSync || 0) + 1;\n      }\n      \n      acc.total += 1;\n      return acc;\n    }, { \n      total: 0, \n      Healthy: 0, \n      Progressing: 0, \n      Degraded: 0, \n      Suspended: 0, \n      Missing: 0, \n      Unknown: 0,\n      Synced: 0,\n      OutOfSync: 0\n    });\n  }, [applications]);\n  \n  React.useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // Utiliser l'API ArgoCD pour récupérer les applications liées à cet ApplicationSet\n        const response = await fetch(`/api/v1/applications?selector=argocd.argoproj.io/application-set-name=${applicationSetName}`);\n        \n        if (!response.ok) {\n          throw new Error(`Erreur lors de la récupération des applications: ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        setApplications(data.items || []);\n      } catch (err) {\n        console.error('Error fetching applications:', err);\n        setError(err instanceof Error ? err.message : 'Une erreur inconnue est survenue');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchApplications();\n    \n    // Configurer un intervalle pour rafraîchir les données toutes les 30 secondes\n    const intervalId = setInterval(fetchApplications, 30000);\n    \n    return () => clearInterval(intervalId);\n  }, [applicationSetName]);\n  \n  return { applications, stats, isLoading, error };\n};","import * as React from 'react';\nimport ApplicationSetList from '../ApplicationSetList/ApplicationSetList';\nimport StatusIndicator from '../StatusIndicator/StatusIndicator';\nimport { useApplicationSetData } from '../../hooks/useApplicationSetData';\nimport { ApplicationSet } from '../../types/applicationSet';\n\ninterface ApplicationSetDetailProps {\n  resource: ApplicationSet;\n  tree: any;\n}\n\nconst ApplicationSetDetail: React.FC<ApplicationSetDetailProps> = ({ resource }) => {\n  const { applications, stats, isLoading, error } = useApplicationSetData(resource.metadata.name);\n  \n  return (\n    <div className=\"application-set-extension\">\n      <div className=\"white-box\">\n        <div className=\"white-box__details\">\n          <div className=\"application-set-extension__header\">\n            <h3 className=\"application-set-extension__title\">\n              Applications générées par {resource.metadata.name}\n            </h3>\n          </div>\n          \n          {!isLoading && !error && (\n            <div className=\"application-set-extension__stats\">\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Total</span>\n                <span className=\"application-set-extension__stat-value\">{stats.total}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Healthy</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--healthy\">{stats.Healthy}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Progressing</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--progressing\">{stats.Progressing}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Degraded</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--degraded\">{stats.Degraded}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Unknown</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--unknown\">{stats.Unknown}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Synced</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--healthy\">{stats.Synced}</span>\n              </div>\n              <div className=\"application-set-extension__stat\">\n                <span className=\"application-set-extension__stat-label\">Out of Sync</span>\n                <span className=\"application-set-extension__stat-value application-set-extension__stat-value--degraded\">{stats.OutOfSync}</span>\n              </div>\n            </div>\n          )}\n          \n          <StatusIndicator \n            total={stats.total}\n            healthy={stats.Healthy}\n            degraded={stats.Degraded}\n            progressing={stats.Progressing}\n            unknown={stats.Unknown}\n          />\n          \n          <ApplicationSetList \n            applications={applications}\n            isLoading={isLoading}\n            error={error}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationSetDetail;","import * as React from 'react';\nimport './extension.css';\n\n// Import des composants\nimport ApplicationSetDetail from './components/ApplicationSetDetail/ApplicationSetDetail';\n\n// Déclaration des types pour l'API d'extensions\ndeclare global {\n  interface Window {\n    extensionsAPI?: {\n      registerResourceExtension: (\n        group: string,\n        kind: string,\n        version: string,\n        options: {\n          component: React.ComponentType<any>;\n        }\n      ) => void;\n    };\n  }\n}\n\n// Enregistrement de l'extension pour le type de ressource ApplicationSet\nif (window.extensionsAPI) {\n  window.extensionsAPI.registerResourceExtension(\n    'argoproj.io',\n    'ApplicationSet',\n    'v1alpha1',\n    {\n      component: ApplicationSetDetail,\n    }\n  );\n  \n  console.log('ApplicationSet extension registered successfully');\n} else {\n  console.error('Failed to register ApplicationSet extension: extensionsAPI not available');\n}\n\nexport default ApplicationSetDetail;\n"],"names":[],"mappings":"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"}